import{_ as n,a,o as d,ae as e}from"./chunks/framework.BACCNjrL.js";const u=JSON.parse('{"title":"ColumnInfo（列信息对象）","description":"","frontmatter":{},"headers":[],"relativePath":"zh/api/column-info.md","filePath":"zh/api/column-info.md"}'),s={name:"zh/api/column-info.md"};function o(c,t,p,l,r,i){return d(),a("div",null,t[0]||(t[0]=[e(`<h1 id="columninfo-列信息对象" tabindex="-1">ColumnInfo（列信息对象） <a class="header-anchor" href="#columninfo-列信息对象" aria-label="Permalink to &quot;ColumnInfo（列信息对象）&quot;">​</a></h1><p><code>ColumnInfo</code> 对象包含数据库列的相关信息。</p><h2 id="属性说明" tabindex="-1">属性说明 <a class="header-anchor" href="#属性说明" aria-label="Permalink to &quot;属性说明&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>name</code></td><td>String</td><td>Java 属性名（下划线转小驼峰）</td></tr><tr><td><code>obj.name</code></td><td>String</td><td>列名</td></tr><tr><td><code>comment</code></td><td>String</td><td>列注释</td></tr><tr><td><code>type</code></td><td>String</td><td>Java 完整类型（如 <code>java.lang.String</code>）</td></tr><tr><td><code>shortType</code></td><td>String</td><td>Java 简短类型（如 <code>String</code>）</td></tr><tr><td><code>ktShortType</code></td><td>String</td><td>Kotlin 简短类型</td></tr><tr><td><code>custom</code></td><td>Boolean</td><td>是否为自定义附加列</td></tr><tr><td><code>ext</code></td><td>Map&lt;String, Object&gt;</td><td>扩展数据</td></tr><tr><td><code>escapedColumnName</code></td><td>String</td><td>转义后的列名</td></tr><tr><td><code>typeHandler</code></td><td>String</td><td>MyBatis 类型处理器</td></tr><tr><td><code>jdbcType</code></td><td>String</td><td>JDBC 类型</td></tr><tr><td><code>ext1</code></td><td>String</td><td>扩展字段1</td></tr><tr><td><code>ext2</code></td><td>String</td><td>扩展字段2</td></tr><tr><td><code>ext3</code></td><td>String</td><td>扩展字段3</td></tr><tr><td><code>ext4</code></td><td>String</td><td>扩展字段4</td></tr></tbody></table><h2 id="示例用法" tabindex="-1">示例用法 <a class="header-anchor" href="#示例用法" aria-label="Permalink to &quot;示例用法&quot;">​</a></h2><div class="language-velocity vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">velocity</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>## 列信息</span></span>
<span class="line"><span>#foreach($column in $tableInfo.fullColumn)</span></span>
<span class="line"><span>列名: \${column.name}</span></span>
<span class="line"><span>类型: \${column.shortType}</span></span>
<span class="line"><span>注释: \${column.comment}</span></span>
<span class="line"><span>#if($column.custom)</span></span>
<span class="line"><span>自定义: 是</span></span>
<span class="line"><span>#end</span></span>
<span class="line"><span>#if($column.typeHandler)</span></span>
<span class="line"><span>类型处理器: \${column.typeHandler}</span></span>
<span class="line"><span>#end</span></span>
<span class="line"><span>#if($column.jdbcType)</span></span>
<span class="line"><span>JDBC 类型: \${column.jdbcType}</span></span>
<span class="line"><span>#end</span></span>
<span class="line"><span>#end</span></span></code></pre></div>`,6)]))}const h=n(s,[["render",o]]);export{u as __pageData,h as default};
