import{_ as e,c as o,o as t,ae as r}from"./chunks/framework.CkEP6GAn.js";const u=JSON.parse('{"title":"Groovy 脚本扩展","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/groovy-script.md","filePath":"zh/guide/groovy-script.md"}'),i={name:"zh/guide/groovy-script.md"};function l(s,a,n,c,d,h){return t(),o("div",null,a[0]||(a[0]=[r('<h1 id="groovy-脚本扩展" tabindex="-1">Groovy 脚本扩展 <a class="header-anchor" href="#groovy-脚本扩展" aria-label="Permalink to &quot;Groovy 脚本扩展&quot;">​</a></h1><p>EasyCode Plus 支持在模板中嵌入 Groovy 脚本，实现更灵活的代码生成逻辑。</p><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><ul><li>在模板设置中启用 Groovy 脚本功能。</li><li>在模板中通过 <code>${groovy(&#39;脚本内容&#39;, 参数)}</code> 调用 Groovy 代码。</li></ul><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to &quot;示例&quot;">​</a></h2><div class="language-velocity vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">velocity</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#set($result = $groovy(&quot;return param.name.toUpperCase()&quot;, { &#39;name&#39;: $tableInfo.name }))</span></span>\n<span class="line"><span>表名大写：${result}</span></span></code></pre></div><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><ul><li>Groovy 脚本可访问传入的参数和全局变量。</li><li>脚本执行异常时会在生成日志中显示详细错误信息。</li><li>建议仅在需要复杂逻辑时使用 Groovy，常规场景优先用 Velocity 语法。</li></ul><h2 id="进阶用法" tabindex="-1">进阶用法 <a class="header-anchor" href="#进阶用法" aria-label="Permalink to &quot;进阶用法&quot;">​</a></h2><ul><li>可加载外部 Groovy 脚本文件，实现模板逻辑复用。</li><li>支持自定义工具类注入，扩展脚本能力。</li></ul>',10)]))}const v=e(i,[["render",l]]);export{u as __pageData,v as default};
